name: Test

# triggers on
on: [push]

jobs:
  test:
    env:
      RAILS_ENV: test
      NODE_ENV: test
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/rails_test"
    runs-on: ubuntu-latest
    # NEW! Adds postgres service. Must come before `steps`.
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: rails_test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    # END NEW
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install curl headers
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
      - name: Set up Ruby # An action to install Ruby and gems
        uses: ruby/setup-ruby@v1 # short for https://github.com/ruby/setup-ruby
        with:
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
      - name: Yarn install
        run: yarn install --frozen-lockfile
      - name: Prepare DB
        run: bin/rails db:create db:schema:load
      - name: RSpec
        run: bin/rspec --format RSpec::Github::Formatter --format progress
      # - name: Get Yarn cache directory path
      #   id: yarn-cache
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - name: Setup cache key and directory for node_modules cache
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ steps.yarn-cache.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
